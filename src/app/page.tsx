'use client';
import { useState, useRef } from 'react';
import QRCode from 'react-qr-code';

interface FormData {
  name: string;
  upiId: string;
  amount: string;
  message: string;
}

interface Errors {
  [key: string]: string;
}

export default function PaymentLinkGenerator() {
  const [formData, setFormData] = useState<FormData>({
    name: '',
    upiId: '',
    amount: '',
    message: ''
  });
  const [upiLink, setUpiLink] = useState<string>('');
  const [errors, setErrors] = useState<Errors>({});
  const [isGenerating, setIsGenerating] = useState<boolean>(false);
  const [copySuccess, setCopySuccess] = useState<string>('');
  const qrRef = useRef<HTMLDivElement>(null);

  const handleInputChange = (field: keyof FormData, value: string) => {
    setFormData(prev => ({ ...prev, [field]: value }));
    if (errors[field]) {
      setErrors(prev => ({ ...prev, [field]: '' }));
    }
  };

  const validateForm = (): boolean => {
    const newErrors: Errors = {};
    
    if (!formData.upiId.trim()) {
      newErrors.upiId = 'UPI ID is required';
    } else if (!/^[\w.-]+@[\w.-]+$/.test(formData.upiId)) {
      newErrors.upiId = 'Please enter a valid UPI ID';
    }
    
    if (!formData.amount.trim()) {
      newErrors.amount = 'Amount is required';
    } else if (isNaN(Number(formData.amount)) || parseFloat(formData.amount) <= 0) {
      newErrors.amount = 'Please enter a valid amount';
    }
    
    setErrors(newErrors);
    return Object.keys(newErrors).length === 0;
  };

  const generateLink = async () => {
    if (!validateForm()) return;
    
    setIsGenerating(true);
    await new Promise(resolve => setTimeout(resolve, 800));
    
    const link = `upi://pay?pa=${formData.upiId}&pn=${encodeURIComponent(
      formData.name || 'Payment'
    )}&am=${formData.amount}&cu=INR&tn=${encodeURIComponent(formData.message || 'Payment')}`;
    
    setUpiLink(link);
    setIsGenerating(false);
  };

  const copyLink = async () => {
    try {
      await navigator.clipboard.writeText(upiLink);
      setCopySuccess('link');
      setTimeout(() => setCopySuccess(''), 2000);
    } catch (err) {
      const textArea = document.createElement('textarea');
      textArea.value = upiLink;
      textArea.style.position = 'fixed';
      textArea.style.left = '-999999px';
      textArea.style.top = '-999999px';
      document.body.appendChild(textArea);
      textArea.focus();
      textArea.select();
      
      try {
        document.execCommand('copy');
        setCopySuccess('link');
        setTimeout(() => setCopySuccess(''), 2000);
      } catch (err2) {
        alert(`UPI Link: ${upiLink}`);
      }
      
      document.body.removeChild(textArea);
    }
  };

  const shareQRImage = async () => {
    try {
      const canvas = document.createElement('canvas');
      const ctx = canvas.getContext('2d');
      canvas.width = 400;
      canvas.height = 520;
      
      if (!ctx) return;

      const gradient = ctx.createLinearGradient(0, 0, 0, 520);
      gradient.addColorStop(0, '#f0fdf4');
      gradient.addColorStop(1, '#ffffff');
      ctx.fillStyle = gradient;
      ctx.fillRect(0, 0, 400, 520);

      const headerGradient = ctx.createLinearGradient(0, 0, 400, 70);
      headerGradient.addColorStop(0, '#059669');
      headerGradient.addColorStop(1, '#047857');
      ctx.fillStyle = headerGradient;
      ctx.fillRect(0, 0, 400, 70);
      
      ctx.fillStyle = '#ffffff';
      ctx.font = 'bold 20px Arial';
      ctx.textAlign = 'center';
      ctx.fillText('FREE UPI Payment', 200, 30);
      ctx.font = '14px Arial';
      ctx.fillText('Generated by Zico Network', 200, 50);

      ctx.fillStyle = '#1f2937';
      ctx.font = 'bold 16px Arial';
      let yPos = 95;

      if (formData.name) {
        ctx.fillText(`Pay to: ${formData.name}`, 200, yPos);
        yPos += 25;
      }
      
      ctx.fillStyle = '#059669';
      ctx.font = 'bold 22px Arial';
      ctx.fillText(`Amount: ₹${formData.amount}`, 200, yPos);
      yPos += 20;
      
      if (formData.message) {
        ctx.fillStyle = '#6b7280';
        ctx.font = '14px Arial';
        ctx.fillText(`For: ${formData.message}`, 200, yPos);
        yPos += 25;
      }

      const svg = qrRef.current?.querySelector('svg');
      if (svg) {
        const svgData = new XMLSerializer().serializeToString(svg);
        const img = new Image();
        
        img.onload = async () => {
          const qrSize = 200;
          const qrX = (400 - qrSize) / 2;
          
          ctx.fillStyle = '#ffffff';
          ctx.shadowColor = 'rgba(0, 0, 0, 0.1)';
          ctx.shadowBlur = 8;
          ctx.fillRect(qrX - 15, yPos, qrSize + 30, qrSize + 30);
          ctx.shadowBlur = 0;
          
          ctx.drawImage(img, qrX, yPos + 15, qrSize, qrSize);
          
          ctx.fillStyle = '#059669';
          ctx.font = 'bold 14px Arial';
          ctx.fillText('Scan with any UPI app to pay', 200, yPos + qrSize + 60);
          ctx.fillStyle = '#6b7280';
          ctx.font = '12px Arial';
          ctx.fillText('100% FREE • Secure • Fast', 200, yPos + qrSize + 80);

          canvas.toBlob(async (blob) => {
            if (blob && navigator.share) {
              try {
                const file = new File([blob], 'free-upi-payment.png', { type: 'image/png' });
                await navigator.share({
                  title: 'FREE UPI Payment Request',
                  text: `Pay ₹${formData.amount} to ${formData.name || formData.upiId}`,
                  files: [file]
                });
                setCopySuccess('shared');
                setTimeout(() => setCopySuccess(''), 2000);
              } catch (shareErr) {
                downloadQRImage(canvas);
              }
            } else {
              downloadQRImage(canvas);
            }
          }, 'image/png');
        };
        
        img.src = 'data:image/svg+xml;base64,' + btoa(svgData);
      }
    } catch (err) {
      shareTextFormat();
    }
  };

  const downloadQRImage = (canvas: HTMLCanvasElement) => {
    const link = document.createElement('a');
    link.download = `FREE-UPI-Payment-${formData.amount}-${Date.now()}.png`;
    link.href = canvas.toDataURL();
    link.click();
    setCopySuccess('downloaded');
    setTimeout(() => setCopySuccess(''), 2000);
  };

  const shareTextFormat = async () => {
    const shareText = `FREE UPI Payment Request\n\n` +
      `💰 Amount: ₹${formData.amount}\n` +
      `👤 Pay to: ${formData.name || formData.upiId}\n` +
      `🏪 UPI ID: ${formData.upiId}\n` +
      (formData.message ? `📝 For: ${formData.message}\n` : '') +
      `\n🔗 UPI Link: ${upiLink}\n\n` +
      `🚀 Tap the link or scan QR code to pay instantly!\n` +
      `Generated FREE by Zico Network`;

    try {
      if (navigator.share) {
        await navigator.share({
          title: 'FREE UPI Payment Request',
          text: shareText
        });
      } else {
        await navigator.clipboard.writeText(shareText);
        alert('Payment details copied! Share anywhere.');
      }
      setCopySuccess('shared');
      setTimeout(() => setCopySuccess(''), 2000);
    } catch (err) {
      alert(shareText);
    }
  };

  const downloadReceipt = () => {
    const canvas = document.createElement('canvas');
    const ctx = canvas.getContext('2d');
    canvas.width = 400;
    canvas.height = 600;
    
    if (!ctx) return;

    const gradient = ctx.createLinearGradient(0, 0, 0, 600);
    gradient.addColorStop(0, '#f0fdf4');
    gradient.addColorStop(0.5, '#ffffff');
    gradient.addColorStop(1, '#f0fdf4');
    ctx.fillStyle = gradient;
    ctx.fillRect(0, 0, 400, 600);

    const headerGradient = ctx.createLinearGradient(0, 0, 400, 80);
    headerGradient.addColorStop(0, '#059669');
    headerGradient.addColorStop(1, '#047857');
    ctx.fillStyle = headerGradient;
    ctx.fillRect(0, 0, 400, 80);
    
    ctx.fillStyle = '#ffffff';
    ctx.font = 'bold 24px Arial';
    ctx.textAlign = 'center';
    ctx.fillText('FREE BILL', 200, 35);
    ctx.font = 'bold 14px Arial';
    ctx.fillText('UPI Payment Receipt', 200, 55);

    ctx.fillStyle = '#059669';
    ctx.font = 'bold 12px Arial';
    ctx.textAlign = 'left';
    ctx.fillText(`Bill #: FREE-${Date.now().toString().slice(-6)}`, 25, 105);
    ctx.textAlign = 'right';
    ctx.fillText(`Date: ${new Date().toLocaleDateString()}`, 375, 105);

    ctx.strokeStyle = '#059669';
    ctx.lineWidth = 2;
    ctx.beginPath();
    ctx.moveTo(25, 120);
    ctx.lineTo(375, 120);
    ctx.stroke();

    ctx.fillStyle = '#1f2937';
    ctx.font = 'bold 18px Arial';
    ctx.textAlign = 'left';
    ctx.fillText('Payment Details', 25, 145);

    let yPos = 175;
    const details = [
      { label: 'Recipient', value: formData.name || 'Not specified', color: '#374151' },
      { label: 'UPI ID', value: formData.upiId, color: '#059669' },
      { label: 'Amount', value: `₹${formData.amount}`, color: '#047857', bold: true, large: true },
      { label: 'Description', value: formData.message || 'Payment', color: '#374151' }
    ];

    details.forEach(detail => {
      ctx.fillStyle = '#6b7280';
      ctx.font = 'bold 12px Arial';
      ctx.fillText(`${detail.label}:`, 25, yPos);
      
      ctx.fillStyle = detail.color;
      if (detail.large) {
        ctx.font = 'bold 22px Arial';
      } else if (detail.bold) {
        ctx.font = 'bold 16px Arial';
      } else {
        ctx.font = '14px Arial';
      }
      ctx.fillText(detail.value, 25, yPos + 18);
      
      yPos += detail.large ? 60 : 50;
    });

    const qrSize = 160;
    const qrX = (400 - qrSize) / 2;
    const qrY = yPos + 20;

    ctx.fillStyle = '#ffffff';
    ctx.shadowColor = 'rgba(0, 0, 0, 0.1)';
    ctx.shadowBlur = 10;
    ctx.fillRect(qrX - 15, qrY - 15, qrSize + 30, qrSize + 30);
    ctx.shadowBlur = 0;

    ctx.strokeStyle = '#059669';
    ctx.lineWidth = 2;
    ctx.strokeRect(qrX - 15, qrY - 15, qrSize + 30, qrSize + 30);

    const svg = qrRef.current?.querySelector('svg');
    if (svg) {
      const svgData = new XMLSerializer().serializeToString(svg);
      const img = new Image();
      
      img.onload = () => {
        ctx.drawImage(img, qrX, qrY, qrSize, qrSize);
        
        ctx.fillStyle = '#059669';
        ctx.font = 'bold 14px Arial';
        ctx.textAlign = 'center';
        ctx.fillText('Scan with any UPI app to pay', 200, qrY + qrSize + 40);
        
        ctx.fillStyle = '#6b7280';
        ctx.font = 'bold 12px Arial';
        ctx.fillText(`Generated: ${new Date().toLocaleString()}`, 200, qrY + qrSize + 60);
        
        ctx.fillStyle = '#047857';
        ctx.font = 'bold 14px Arial';
        ctx.fillText('100% FREE • Secure • Fast', 200, qrY + qrSize + 80);
        
        const link = document.createElement('a');
        link.download = `FREE-UPI-Bill-${formData.upiId}-${formData.amount}-${Date.now()}.png`;
        link.href = canvas.toDataURL('image/png', 1.0);
        link.click();
      };
      
      img.src = 'data:image/svg+xml;base64,' + btoa(svgData);
    }
  };

  const resetForm = () => {
    setFormData({ name: '', upiId: '', amount: '', message: '' });
    setUpiLink('');
    setErrors({});
    setCopySuccess('');
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-green-50 to-emerald-50">
      {/* Mobile-First Professional Header */}
      <div className="bg-gradient-to-r from-green-600 to-emerald-600 shadow-lg">
        <div className="px-4 py-6">
          <div className="flex items-center justify-center space-x-3">
            <div className="w-12 h-12 rounded-xl overflow-hidden bg-white shadow-md border-2 border-white/30">
              <img 
                src="/logo.png" 
                alt="Free UPI Generator" 
                className="w-full h-full object-contain p-2"
              />
            </div>
            <div className="text-center">
              <h1 className="text-lg font-black text-white leading-tight">
                FREE UPI GENERATOR
              </h1>
              <p className="text-green-100 text-xs font-semibold">Link • QR • Bill Generator</p>
              <div className="flex items-center justify-center space-x-2 mt-1">
                <span className="bg-yellow-400 text-yellow-900 px-2 py-0.5 rounded-full text-xs font-bold">100% FREE</span>
                <span className="bg-white/20 text-white px-2 py-0.5 rounded-full text-xs font-medium">No Registration</span>
              </div>
            </div>
          </div>
        </div>
      </div>

      {/* Mobile-Optimized Main Content */}
      <div className="px-4 py-6">
        <div className="max-w-sm mx-auto space-y-6">
          
          {/* Form Section */}
          <div className="bg-white rounded-2xl shadow-xl border border-green-100 p-6">
            <div className="mb-6">
              <h2 className="text-xl font-bold text-gray-900 mb-2">Create FREE UPI</h2>
              <p className="text-green-600 font-medium text-sm">Generate in seconds</p>
            </div>

            <div className="space-y-5">
              {/* Name Field */}
              <div>
                <label className="block text-sm font-bold text-gray-800 mb-2">
                  👤 Recipient Name
                </label>
                <input
                  type="text"
                  value={formData.name}
                  onChange={(e) => handleInputChange('name', e.target.value)}
                  placeholder="Your name or business"
                  className="w-full px-4 py-4 text-base border-2 border-gray-200 rounded-xl focus:ring-2 focus:ring-green-500 focus:border-green-500 transition-colors text-gray-900 placeholder-gray-500 bg-gray-50 touch-manipulation"
                />
              </div>

              {/* UPI ID Field */}
              <div>
                <label className="block text-sm font-bold text-gray-800 mb-2">
                  🏪 UPI ID <span className="text-red-500">*</span>
                </label>
                <input
                  type="text"
                  value={formData.upiId}
                  onChange={(e) => handleInputChange('upiId', e.target.value)}
                  placeholder="yourname@paytm"
                  className={`w-full px-4 py-4 text-base border-2 rounded-xl transition-colors text-gray-900 placeholder-gray-500 bg-gray-50 touch-manipulation ${
                    errors.upiId 
                      ? 'border-red-400 focus:ring-red-500 focus:border-red-500' 
                      : 'border-gray-200 focus:ring-green-500 focus:border-green-500'
                  }`}
                />
                {errors.upiId && (
                  <p className="mt-2 text-sm text-red-600 font-bold bg-red-50 px-3 py-2 rounded-lg">
                    ❌ {errors.upiId}
                  </p>
                )}
              </div>

              {/* Amount Field */}
              <div>
                <label className="block text-sm font-bold text-gray-800 mb-2">
                  💰 Amount (INR) <span className="text-red-500">*</span>
                </label>
                <div className="relative">
                  <span className="absolute left-4 top-1/2 transform -translate-y-1/2 text-green-600 font-black text-xl">₹</span>
                  <input
                    type="number"
                    inputMode="decimal"
                    value={formData.amount}
                    onChange={(e) => handleInputChange('amount', e.target.value)}
                    placeholder="0.00"
                    className={`w-full pl-12 pr-4 py-4 text-base border-2 rounded-xl transition-colors text-gray-900 placeholder-gray-500 bg-gray-50 touch-manipulation ${
                      errors.amount 
                        ? 'border-red-400 focus:ring-red-500 focus:border-red-500' 
                        : 'border-gray-200 focus:ring-green-500 focus:border-green-500'
                    }`}
                  />
                </div>
                {errors.amount && (
                  <p className="mt-2 text-sm text-red-600 font-bold bg-red-50 px-3 py-2 rounded-lg">
                    ❌ {errors.amount}
                  </p>
                )}
              </div>

              {/* Message Field */}
              <div>
                <label className="block text-sm font-bold text-gray-800 mb-2">
                  📝 Payment Description
                </label>
                <input
                  type="text"
                  value={formData.message}
                  onChange={(e) => handleInputChange('message', e.target.value)}
                  placeholder="What's this payment for?"
                  className="w-full px-4 py-4 text-base border-2 border-gray-200 rounded-xl focus:ring-2 focus:ring-green-500 focus:border-green-500 transition-colors text-gray-900 placeholder-gray-500 bg-gray-50 touch-manipulation"
                />
              </div>

              {/* Generate Button */}
              <button
                onClick={generateLink}
                disabled={isGenerating}
                className="w-full bg-gradient-to-r from-green-600 to-emerald-600 hover:from-green-700 hover:to-emerald-700 text-white py-4 px-6 rounded-xl font-black text-lg shadow-lg focus:ring-4 focus:ring-green-500/50 transition-all disabled:opacity-50 touch-manipulation"
              >
                {isGenerating ? (
                  <div className="flex items-center justify-center space-x-2">
                    <div className="w-5 h-5 border-2 border-white border-t-transparent rounded-full animate-spin"></div>
                    <span>Generating...</span>
                  </div>
                ) : (
                  'GENERATE FREE UPI & QR ⚡'
                )}
              </button>
              
              {upiLink && (
                <button
                  onClick={resetForm}
                  className="w-full mt-3 px-4 py-3 border-2 border-gray-300 text-gray-700 rounded-xl font-bold hover:bg-gray-50 transition-colors touch-manipulation"
                >
                  🔄 Create Another FREE UPI
                </button>
              )}
            </div>
          </div>

          {/* Result Section */}
          {upiLink && (
            <div className="bg-white rounded-2xl shadow-xl border border-green-100 p-6">
              <div className="text-center mb-6">
                <div className="bg-gradient-to-r from-green-500 to-emerald-500 text-white px-4 py-2 rounded-xl inline-block font-bold shadow-lg mb-2">
                  🎉 FREE UPI Generated Successfully!
                </div>
              </div>

              {/* UPI Link */}
              <div className="bg-gradient-to-r from-green-50 to-emerald-50 rounded-xl p-4 border border-green-200 mb-6">
                <label className="block text-sm font-bold text-green-800 mb-3">
                  🔗 FREE UPI Link
                </label>
                <div className="flex gap-2">
                  <input
                    type="text"
                    value={upiLink}
                    readOnly
                    className="flex-1 px-3 py-3 bg-white border border-green-300 rounded-lg text-xs text-gray-700 font-mono"
                  />
                  <button
                    onClick={copyLink}
                    className={`px-4 py-3 rounded-lg font-bold text-sm transition-all touch-manipulation ${
                      copySuccess === 'link'
                        ? 'bg-green-500 text-white' 
                        : 'bg-green-600 text-white hover:bg-green-700'
                    }`}
                  >
                    {copySuccess === 'link' ? '✅' : '📋'}
                  </button>
                </div>
              </div>

              {/* QR Code */}
              <div className="text-center mb-6">
                <label className="block text-lg font-bold text-gray-900 mb-4">
                  📱 FREE QR Code
                </label>
                <div className="inline-block p-4 bg-white border-2 border-green-300 rounded-2xl shadow-lg mb-4" ref={qrRef}>
                  <QRCode 
                    value={upiLink} 
                    size={200}
                    style={{ height: "auto", maxWidth: "100%", width: "100%" }}
                  />
                </div>
                <p className="text-sm text-green-700 font-semibold bg-green-50 inline-block px-4 py-2 rounded-full mb-6">
                  🚀 Scan with any UPI app to pay
                </p>
                
                {/* Action Buttons */}
                <div className="grid grid-cols-3 gap-3">
                  <button
                    onClick={shareQRImage}
                    className={`flex flex-col items-center justify-center py-4 px-2 rounded-xl font-bold text-xs transition-all shadow-md touch-manipulation ${
                      copySuccess === 'shared'
                        ? 'bg-green-500 text-white'
                        : 'bg-gradient-to-r from-green-600 to-emerald-600 text-white hover:from-green-700 hover:to-emerald-700'
                    }`}
                  >
                    <span className="text-lg mb-1">📤</span>
                    <span>Share QR</span>
                  </button>
                  
                  <button
                    onClick={shareTextFormat}
                    className={`flex flex-col items-center justify-center py-4 px-2 rounded-xl font-bold text-xs transition-all border-2 shadow-md touch-manipulation ${
                      copySuccess === 'text'
                        ? 'bg-emerald-500 text-white border-emerald-500'
                        : 'border-emerald-300 text-emerald-700 hover:bg-emerald-50'
                    }`}
                  >
                    <span className="text-lg mb-1">💬</span>
                    <span>Share Text</span>
                  </button>
                  
                  <button
                    onClick={downloadReceipt}
                    className="flex flex-col items-center justify-center py-4 px-2 border-2 border-purple-400 text-purple-700 rounded-xl font-bold text-xs hover:bg-purple-50 transition-all shadow-md touch-manipulation"
                  >
                    <span className="text-lg mb-1">🧾</span>
                    <span>FREE Bill</span>
                  </button>
                </div>
              </div>

              {/* Payment Summary */}
              <div className="bg-gradient-to-r from-blue-50 to-teal-50 rounded-xl p-4 border border-blue-200">
                <h4 className="text-lg font-bold text-gray-900 mb-3">
                  📊 Payment Summary
                </h4>
                <div className="space-y-3 text-sm">
                  {formData.name && (
                    <div className="flex justify-between items-center p-3 bg-white rounded-lg">
                      <span className="text-gray-700 font-semibold">👤 Recipient</span>
                      <span className="font-bold text-gray-900">{formData.name}</span>
                    </div>
                  )}
                  <div className="flex justify-between items-center p-3 bg-white rounded-lg">
                    <span className="text-gray-700 font-semibold">🏪 UPI ID</span>
                    <span className="font-bold text-gray-900 font-mono text-xs break-all">{formData.upiId}</span>
                  </div>
                  <div className="flex justify-between items-center p-3 bg-gradient-to-r from-green-500 to-emerald-500 rounded-lg text-white">
                    <span className="font-bold">💰 Amount</span>
                    <span className="font-black text-lg">₹{formData.amount}</span>
                  </div>
                  {formData.message && (
                    <div className="flex justify-between items-center p-3 bg-white rounded-lg">
                      <span className="text-gray-700 font-semibold">📝 Description</span>
                      <span className="font-bold text-gray-900">{formData.message}</span>
                    </div>
                  )}
                </div>
              </div>
            </div>
          )}
          
          {!upiLink && (
            <div className="bg-white rounded-2xl shadow-xl border border-green-100 p-6 text-center">
              <div className="w-16 h-16 bg-gradient-to-br from-green-100 to-emerald-100 rounded-full flex items-center justify-center mx-auto mb-4">
                <span className="text-2xl">🎯</span>
              </div>
              <h3 className="text-xl font-bold text-gray-900 mb-2">Ready to Generate</h3>
              <p className="text-green-600 font-semibold">Create your FREE UPI link, QR code & bill instantly!</p>
              
              <div className="grid grid-cols-3 gap-3 mt-6">
                <div className="p-3 bg-green-50 rounded-xl">
                  <div className="text-xl mb-1">🔗</div>
                  <div className="text-xs font-bold text-green-700">FREE Link</div>
                </div>
                <div className="p-3 bg-emerald-50 rounded-xl">
                  <div className="text-xl mb-1">📱</div>
                  <div className="text-xs font-bold text-emerald-700">FREE QR</div>
                </div>
                <div className="p-3 bg-teal-50 rounded-xl">
                  <div className="text-xl mb-1">🧾</div>
                  <div className="text-xs font-bold text-teal-700">FREE Bill</div>
                </div>
              </div>
            </div>
          )}
        </div>

        {/* Clean Footer without logo */}
        <div className="mt-12 text-center">
          <div className="inline-block bg-gradient-to-r from-green-600 to-emerald-600 px-6 py-3 rounded-full shadow-lg">
            <span className="text-white font-black text-sm">Zico Network</span>
            <span className="text-green-100 font-bold text-xs ml-2">• 100% FREE • Secure • Fast</span>
          </div>
          <p className="text-green-600 font-semibold mt-3 text-sm">No Registration Required • Generate Unlimited UPI Links FREE</p>
        </div>
      </div>
    </div>
  );
}
